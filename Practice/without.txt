
without:     file format elf32-i386


Disassembly of section .init:

080482b4 <_init>:
 80482b4:	53                   	push   %ebx
 80482b5:	83 ec 08             	sub    $0x8,%esp
 80482b8:	e8 93 00 00 00       	call   8048350 <__x86.get_pc_thunk.bx>
 80482bd:	81 c3 43 1d 00 00    	add    $0x1d43,%ebx
 80482c3:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482c9:	85 c0                	test   %eax,%eax
 80482cb:	74 05                	je     80482d2 <_init+0x1e>
 80482cd:	e8 2e 00 00 00       	call   8048300 <__gmon_start__@plt>
 80482d2:	83 c4 08             	add    $0x8,%esp
 80482d5:	5b                   	pop    %ebx
 80482d6:	c3                   	ret    

Disassembly of section .plt:

080482e0 <printf@plt-0x10>:
 80482e0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80482e6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80482ec:	00 00                	add    %al,(%eax)
	...

080482f0 <printf@plt>:
 80482f0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80482f6:	68 00 00 00 00       	push   $0x0
 80482fb:	e9 e0 ff ff ff       	jmp    80482e0 <_init+0x2c>

08048300 <__gmon_start__@plt>:
 8048300:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048306:	68 08 00 00 00       	push   $0x8
 804830b:	e9 d0 ff ff ff       	jmp    80482e0 <_init+0x2c>

08048310 <__libc_start_main@plt>:
 8048310:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048316:	68 10 00 00 00       	push   $0x10
 804831b:	e9 c0 ff ff ff       	jmp    80482e0 <_init+0x2c>

Disassembly of section .text:

08048320 <_start>:
 8048320:	31 ed                	xor    %ebp,%ebp
 8048322:	5e                   	pop    %esi
 8048323:	89 e1                	mov    %esp,%ecx
 8048325:	83 e4 f0             	and    $0xfffffff0,%esp
 8048328:	50                   	push   %eax
 8048329:	54                   	push   %esp
 804832a:	52                   	push   %edx
 804832b:	68 f0 84 04 08       	push   $0x80484f0
 8048330:	68 80 84 04 08       	push   $0x8048480
 8048335:	51                   	push   %ecx
 8048336:	56                   	push   %esi
 8048337:	68 4c 84 04 08       	push   $0x804844c
 804833c:	e8 cf ff ff ff       	call   8048310 <__libc_start_main@plt>
 8048341:	f4                   	hlt    
 8048342:	66 90                	xchg   %ax,%ax
 8048344:	66 90                	xchg   %ax,%ax
 8048346:	66 90                	xchg   %ax,%ax
 8048348:	66 90                	xchg   %ax,%ax
 804834a:	66 90                	xchg   %ax,%ax
 804834c:	66 90                	xchg   %ax,%ax
 804834e:	66 90                	xchg   %ax,%ax

08048350 <__x86.get_pc_thunk.bx>:
 8048350:	8b 1c 24             	mov    (%esp),%ebx
 8048353:	c3                   	ret    
 8048354:	66 90                	xchg   %ax,%ax
 8048356:	66 90                	xchg   %ax,%ax
 8048358:	66 90                	xchg   %ax,%ax
 804835a:	66 90                	xchg   %ax,%ax
 804835c:	66 90                	xchg   %ax,%ax
 804835e:	66 90                	xchg   %ax,%ax

08048360 <deregister_tm_clones>:
 8048360:	b8 23 a0 04 08       	mov    $0x804a023,%eax
 8048365:	2d 20 a0 04 08       	sub    $0x804a020,%eax
 804836a:	83 f8 06             	cmp    $0x6,%eax
 804836d:	77 01                	ja     8048370 <deregister_tm_clones+0x10>
 804836f:	c3                   	ret    
 8048370:	b8 00 00 00 00       	mov    $0x0,%eax
 8048375:	85 c0                	test   %eax,%eax
 8048377:	74 f6                	je     804836f <deregister_tm_clones+0xf>
 8048379:	55                   	push   %ebp
 804837a:	89 e5                	mov    %esp,%ebp
 804837c:	83 ec 18             	sub    $0x18,%esp
 804837f:	c7 04 24 20 a0 04 08 	movl   $0x804a020,(%esp)
 8048386:	ff d0                	call   *%eax
 8048388:	c9                   	leave  
 8048389:	c3                   	ret    
 804838a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048390 <register_tm_clones>:
 8048390:	b8 20 a0 04 08       	mov    $0x804a020,%eax
 8048395:	2d 20 a0 04 08       	sub    $0x804a020,%eax
 804839a:	c1 f8 02             	sar    $0x2,%eax
 804839d:	89 c2                	mov    %eax,%edx
 804839f:	c1 ea 1f             	shr    $0x1f,%edx
 80483a2:	01 d0                	add    %edx,%eax
 80483a4:	d1 f8                	sar    %eax
 80483a6:	75 01                	jne    80483a9 <register_tm_clones+0x19>
 80483a8:	c3                   	ret    
 80483a9:	ba 00 00 00 00       	mov    $0x0,%edx
 80483ae:	85 d2                	test   %edx,%edx
 80483b0:	74 f6                	je     80483a8 <register_tm_clones+0x18>
 80483b2:	55                   	push   %ebp
 80483b3:	89 e5                	mov    %esp,%ebp
 80483b5:	83 ec 18             	sub    $0x18,%esp
 80483b8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80483bc:	c7 04 24 20 a0 04 08 	movl   $0x804a020,(%esp)
 80483c3:	ff d2                	call   *%edx
 80483c5:	c9                   	leave  
 80483c6:	c3                   	ret    
 80483c7:	89 f6                	mov    %esi,%esi
 80483c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483d0 <__do_global_dtors_aux>:
 80483d0:	80 3d 20 a0 04 08 00 	cmpb   $0x0,0x804a020
 80483d7:	75 13                	jne    80483ec <__do_global_dtors_aux+0x1c>
 80483d9:	55                   	push   %ebp
 80483da:	89 e5                	mov    %esp,%ebp
 80483dc:	83 ec 08             	sub    $0x8,%esp
 80483df:	e8 7c ff ff ff       	call   8048360 <deregister_tm_clones>
 80483e4:	c6 05 20 a0 04 08 01 	movb   $0x1,0x804a020
 80483eb:	c9                   	leave  
 80483ec:	f3 c3                	repz ret 
 80483ee:	66 90                	xchg   %ax,%ax

080483f0 <frame_dummy>:
 80483f0:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 80483f5:	85 c0                	test   %eax,%eax
 80483f7:	74 1f                	je     8048418 <frame_dummy+0x28>
 80483f9:	b8 00 00 00 00       	mov    $0x0,%eax
 80483fe:	85 c0                	test   %eax,%eax
 8048400:	74 16                	je     8048418 <frame_dummy+0x28>
 8048402:	55                   	push   %ebp
 8048403:	89 e5                	mov    %esp,%ebp
 8048405:	83 ec 18             	sub    $0x18,%esp
 8048408:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804840f:	ff d0                	call   *%eax
 8048411:	c9                   	leave  
 8048412:	e9 79 ff ff ff       	jmp    8048390 <register_tm_clones>
 8048417:	90                   	nop
 8048418:	e9 73 ff ff ff       	jmp    8048390 <register_tm_clones>

0804841d <fun>:
 804841d:	55                   	push   %ebp
 804841e:	89 e5                	mov    %esp,%ebp
 8048420:	83 ec 10             	sub    $0x10,%esp
 8048423:	c7 45 f3 41 41 41 41 	movl   $0x41414141,-0xd(%ebp)
 804842a:	c6 45 f7 41          	movb   $0x41,-0x9(%ebp)
 804842e:	8d 45 f3             	lea    -0xd(%ebp),%eax
 8048431:	83 c0 11             	add    $0x11,%eax
 8048434:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8048437:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804843a:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804843d:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048440:	8b 00                	mov    (%eax),%eax
 8048442:	8d 50 02             	lea    0x2(%eax),%edx
 8048445:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048448:	89 10                	mov    %edx,(%eax)
 804844a:	c9                   	leave  
 804844b:	c3                   	ret    

0804844c <main>:
 804844c:	55                   	push   %ebp
 804844d:	89 e5                	mov    %esp,%ebp
 804844f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048452:	83 ec 20             	sub    $0x20,%esp
 8048455:	c7 44 24 1c 0a 00 00 	movl   $0xa,0x1c(%esp)
 804845c:	00 
 804845d:	e8 bb ff ff ff       	call   804841d <fun>
 8048462:	c7 44 24 1c 63 00 00 	movl   $0x63,0x1c(%esp)
 8048469:	00 
 804846a:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 804846e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048472:	c7 04 24 10 85 04 08 	movl   $0x8048510,(%esp)
 8048479:	e8 72 fe ff ff       	call   80482f0 <printf@plt>
 804847e:	c9                   	leave  
 804847f:	c3                   	ret    

08048480 <__libc_csu_init>:
 8048480:	55                   	push   %ebp
 8048481:	57                   	push   %edi
 8048482:	31 ff                	xor    %edi,%edi
 8048484:	56                   	push   %esi
 8048485:	53                   	push   %ebx
 8048486:	e8 c5 fe ff ff       	call   8048350 <__x86.get_pc_thunk.bx>
 804848b:	81 c3 75 1b 00 00    	add    $0x1b75,%ebx
 8048491:	83 ec 1c             	sub    $0x1c,%esp
 8048494:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048498:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804849e:	e8 11 fe ff ff       	call   80482b4 <_init>
 80484a3:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80484a9:	29 c6                	sub    %eax,%esi
 80484ab:	c1 fe 02             	sar    $0x2,%esi
 80484ae:	85 f6                	test   %esi,%esi
 80484b0:	74 27                	je     80484d9 <__libc_csu_init+0x59>
 80484b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80484b8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80484bc:	89 2c 24             	mov    %ebp,(%esp)
 80484bf:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484c3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80484c7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484cb:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80484d2:	83 c7 01             	add    $0x1,%edi
 80484d5:	39 f7                	cmp    %esi,%edi
 80484d7:	75 df                	jne    80484b8 <__libc_csu_init+0x38>
 80484d9:	83 c4 1c             	add    $0x1c,%esp
 80484dc:	5b                   	pop    %ebx
 80484dd:	5e                   	pop    %esi
 80484de:	5f                   	pop    %edi
 80484df:	5d                   	pop    %ebp
 80484e0:	c3                   	ret    
 80484e1:	eb 0d                	jmp    80484f0 <__libc_csu_fini>
 80484e3:	90                   	nop
 80484e4:	90                   	nop
 80484e5:	90                   	nop
 80484e6:	90                   	nop
 80484e7:	90                   	nop
 80484e8:	90                   	nop
 80484e9:	90                   	nop
 80484ea:	90                   	nop
 80484eb:	90                   	nop
 80484ec:	90                   	nop
 80484ed:	90                   	nop
 80484ee:	90                   	nop
 80484ef:	90                   	nop

080484f0 <__libc_csu_fini>:
 80484f0:	f3 c3                	repz ret 

Disassembly of section .fini:

080484f4 <_fini>:
 80484f4:	53                   	push   %ebx
 80484f5:	83 ec 08             	sub    $0x8,%esp
 80484f8:	e8 53 fe ff ff       	call   8048350 <__x86.get_pc_thunk.bx>
 80484fd:	81 c3 03 1b 00 00    	add    $0x1b03,%ebx
 8048503:	83 c4 08             	add    $0x8,%esp
 8048506:	5b                   	pop    %ebx
 8048507:	c3                   	ret    
